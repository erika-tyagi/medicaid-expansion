summary(test)
plot(test)
summary(test)
test <- matchit(scream_plant ~ industry, data=ps2_data, method = "exact")
summary(test)
test <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
summary(m_out$model)
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
summary(m_out$model)
summary(m_out)
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
m_data <- match.data(m_out)
summary(m_data)
View(m_data)
plot(m_out)
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "nearest")
plot(m_out)
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
m_data <- match.data(m_out)
m_out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
m_data <- match.data(m_out)
summary(m_out)
m.out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
z.out <- zelig(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004,  data=match.data(m_out), model="ls")
install.packages("Zelig")
library(Zelig)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(knitr)
library(dplyr)
library(formatR)
library(stargazer)
library(ggplot2)
library(gridExtra)
# library(kableExtra)
library(MatchIt)
library(Zelig)
#opts_chunk$set(tidy.opts=list(width.cutoff=70), tidy=TRUE)
#options(scipen=999)
setwd('~/Dropbox/Spring, 2019/Program Evaluation/Problem Set 2')
m.out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
m.out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(knitr)
library(dplyr)
library(formatR)
library(stargazer)
library(ggplot2)
library(gridExtra)
# library(kableExtra)
library(MatchIt)
library(Zelig)
#opts_chunk$set(tidy.opts=list(width.cutoff=70), tidy=TRUE)
#options(scipen=999)
setwd('~/Dropbox/Spring, 2019/Program Evaluation/Problem Set 2')
# Load data
ps2_data <- read.csv("ps2_data.csv")
# Clean data
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-eight'] <- '1988'
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-nine'] <- '1989'
ps2_data <- subset(ps2_data, industry!='AUTOMOTIVE')
ps2_data$facility_opening_year = droplevels(ps2_data$facility_opening_year)
ps2_data$industry = droplevels(ps2_data$industry)
# Run difference-in-means balance test
bal_1 <- lm(scream_plant ~ industry, data=ps2_data)
bal_2 <- lm(scream_plant ~ as.numeric(facility_opening_year), data=ps2_data)
bal_3 <- lm(scream_plant ~ production_value_2004, data=ps2_data)
stargazer(bal_1, bal_2, bal_3, type='text', omit.stat=c('f', 'ser'))
lm1 <- lm(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004,  data=ps2_data)
lm2 <- lm(tons_of_nox ~ scream_plant, data=ps2_data)
stargazer(lm1, lm2, type='text', omit.stat=c('f', 'ser'))
m.out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
z.out <- zelig(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004,  data=match.data(m_out), model="ls")
z.out <- zelig(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004,  data=match.data(m.out), model="ls")
x.out <- setx(z.out, treat=0)
x.out <- setx(z.out, scream_plant=0)
View(m.out)
x1.out <- setx(z.out, scream_plant=1)
s.out <- sim(z.out, x=x.out, x1=x1.out)
summary(s.out)
m.out <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method = "exact")
z.out <- zelig(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004,  data=match.data(m.out), model="ls")
m.out <- matchit(scream_plant ~ industry, data=ps2_data, method = "exact")
z.out <- zelig(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year),  data=match.data(m.out), model="ls")
x.out <- setx(z.out, scream_plant=0)
m.out <- matchit(scream_plant ~ industry, data=ps2_data, method = "exact")
z.out <- zelig(tons_of_nox ~ scream_plant + industry,  data=match.data(m.out), model="ls")
x.out <- setx(z.out, scream_plant=0)
x1.out <- setx(z.out, scream_plant=1)
s.out <- sim(z.out, x=x.out, x1=x1.out)
summary(s.out)
test <- t.test(ps2_data$facility_opening_year[ps2_dataLL$scream_plant == 1], ps2_data$facility_opening_year[ps2_dataLL$scream_plant == 0])
test <- t.test(ps2_data$facility_opening_year[ps2_data$scream_plant == 1], ps2_data$facility_opening_year[ps2_data$scream_plant == 0])
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.match
exact.data <- match.data(exact.match)
head(exact.data)
head(exact.data)
lm(tons_of_nox ~ scream_plant + industry, data=exact.data, weights=exact.data$weights)
lm(tons_of_nox ~ scream_plant + industry, data=exact.data, weights=exact.data$weights)
summary(lm(tons_of_nox ~ scream_plant + industry, data=exact.data, weights=exact.data$weights))
summary(lm(tons_of_nox ~ scream_plant + industry + facility_opening_year, data=exact.data, weights=exact.data$weights))
summary(lm(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year), data=exact.data, weights=exact.data$weights))
summary(lm(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004, data=exact.data, weights=exact.data$weights))
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat - y.cont
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
# Calculate ATE
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat - y.cont
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
# Calculate ATE
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat - y.cont
# Calculate ATT
mean(exact.data$tons_of_nox[exact.data$scream_plant == 1]) - mean(exact.data$tons_of_nox[exact.data$scream_plant == 0])
z.out1 <- zelig(tons_of_nox ~ industry, data=exact.data(exact.match, "control"), model="ls")
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
z.out1 <- zelig(tons_of_nox ~ industry, data=exact.data(exact.match, "control"), model="ls")
exact.data <- match.data(exact.match)
exact.data <- match.data(exact.match)
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
# Calculate ATE
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat - y.cont
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
z.out1 <- zelig(tons_of_nox ~ industry, data=exact.data(exact.match, "control"), model="ls")
exact_data <- match.data(exact.match)
z.out1 <- zelig(tons_of_nox ~ industry, data = exact_data(exact.match, "control"), model="ls")
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact_data <- match.data(exact.match)
# Calculate ATE
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat - y.cont
# Calculate ATT
mean(exact.data$tons_of_nox[exact.data$scream_plant == 1]) - mean(exact.data$tons_of_nox[exact.data$scream_plant == 0])
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact_data <- match.data(exact.match)
# Calculate ATE
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat - y.cont
# Calculate ATT
mean(exact.data$tons_of_nox[exact.data$scream_plant == 1]) - mean(exact.data$tons_of_nox[exact.data$scream_plant == 0])
lm(tons_of_nox ~ scream_plant + industry, data = exact.data)
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
# Calculate ATE
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat
y.cont
mean(ps2_data$tons_of_nox[ps2_data$scream_plant==1])
mean(ps2_data$tons_of_nox[ps2_data$scream_plant==0])
m.out1 <- matchit(scream_plant ~ industry, method = "exact", data = ps2_data)
z.out1 <- zelig(tons_of_nox ~ scream_plant + industry, data = match.data(m.out1, "control"), model = "ls")
x.out1 <- setx(z.out1, data = match.data(m.out1, "treat"), cond = TRUE)
s.out1 <- sim(z.out1, x = x.out1)
summary(s.out1)
x.out1 <- setx(z.out1, data = match.data(m.out1, "treat"), cond = TRUE)
s.out1 <- sim(z.out1, x = x.out1)
z.out1
x.out1
m.out1 <- matchit(scream_plant ~ industry, method = "exact", data = ps2_data)
z.out1 <- zelig(tons_of_nox ~ industry, data = match.data(m.out1, "control"), model = "ls")
x.out1 <- setx(z.out1, data = match.data(m.out1, "treat"), cond = TRUE)
s.out1 <- sim(z.out1, x = x.out1)
summary(s.out1)
6.150989 - 6.041473
m.out1 <- matchit(scream_plant ~ industry, method = "exact", data = ps2_data)
z.out1 <- zelig(tons_of_nox ~ industry + as.numeric(facility_opening_year), data = match.data(m.out1, "control"), model = "ls")
x.out1 <- setx(z.out1, data = match.data(m.out1, "treat"), cond = TRUE)
m.out1 <- matchit(scream_plant ~ industry, method = "exact", data = ps2_data)
z.out1 <- zelig(tons_of_nox ~ industry, data = match.data(m.out1, "control"), model = "ls")
x.out1 <- setx(z.out1, data = match.data(m.out1, "treat"), cond = TRUE)
s.out1 <- sim(z.out1, x = x.out1)
summary(s.out1)
# Alt ATE
z.out2 <- zelig(tons_of_nox ~ industry, data = match.data(m.out1, "treat"), model = "ls")
x.out2 <- setx(z.out2, data = match.data(m.out1, "control"), cond = TRUE)
s.out2 <- sim(z.out2, x = x.out2)
ate.all <- c(s.out1$qi$att.ev, -s.out2$qi$att.ev)
summary(s.out2)
3.654825-3.581395
ate.all <- c(s.out1$qi$att.ev, s.out2$qi$att.ev)
ate.all <- c(s.out1$qi$att.ev, -s.out2$qi$att.ev)
s.out1$qi$att.ev
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(knitr)
library(dplyr)
library(formatR)
library(stargazer)
library(ggplot2)
library(gridExtra)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(knitr)
library(dplyr)
library(formatR)
library(stargazer)
library(ggplot2)
library(kableExtra)
library(MatchIt)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(knitr)
library(dplyr)
library(formatR)
library(stargazer)
library(ggplot2)
library(kableExtra)
library(MatchIt)
library(Zelig)
#opts_chunk$set(tidy.opts=list(width.cutoff=70), tidy=TRUE)
#options(scipen=999)
setwd('~/Dropbox/Spring, 2019/Program Evaluation/Problem Set 2')
# Load data
ps2_data <- read.csv("ps2_data.csv")
# Clean data
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-eight'] <- '1988'
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-nine'] <- '1989'
ps2_data <- subset(ps2_data, industry!='AUTOMOTIVE')
ps2_data$facility_opening_year = droplevels(ps2_data$facility_opening_year)
ps2_data$industry = droplevels(ps2_data$industry)
# Run difference-in-means balance test
bal_1 <- lm(scream_plant ~ industry, data=ps2_data)
bal_2 <- lm(scream_plant ~ as.numeric(facility_opening_year), data=ps2_data)
bal_3 <- lm(scream_plant ~ production_value_2004, data=ps2_data)
stargazer(bal_1, bal_2, bal_3, type='text', omit.stat=c('f', 'ser'))
# Run regression-based approach
lm1 <- lm(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004,  data=ps2_data)
lm2 <- lm(tons_of_nox ~ scream_plant, data=ps2_data)
stargazer(lm1, lm2, type='text', omit.stat=c('f', 'ser'))
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
exact.data <- match.data(exact.match)
View(exact.data)
summary(exact.match)
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
summary(exact.match)
exact.data <- match.data(exact.match)
# Calculate ATE
y.treat <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 1],
exact.data$weights[exact.data$scream_plant == 1])
y.cont <- weighted.mean(exact.data$tons_of_nox[exact.data$scream_plant == 0],
exact.data$weights[exact.data$scream_plant == 0])
y.treat - y.cont
# Calculate ATT
mean(exact.data$tons_of_nox[exact.data$scream_plant == 1]) - mean(exact.data$tons_of_nox[exact.data$scream_plant == 0])
y.treat - y.cont
# Calculate ATT
mean(exact.data$tons_of_nox[exact.data$scream_plant == 1]) - mean(exact.data$tons_of_nox[exact.data$scream_plant == 0])
View(exact.data)
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
summary(exact.match)
exact.data <- match.data(exact.match)
table(ps2_data$facility_opening_year, ps2_data$facility_opening_year)
table(ps2_data$facility_opening_year, ps2_data$industry)
# Load data
ps2_data <- read.csv("ps2_data.csv")
# Clean data
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-eight'] <- '1988'
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-nine'] <- '1989'
ps2_data$facility_opening_year = droplevels(ps2_data$facility_opening_year)
table(ps2_data$facility_opening_year, ps2_data$industry)
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry + facility_opening_year, data=ps2_data, method='exact')
summary(exact.match)
exact.data <- match.data(exact.match)
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
summary(exact.match)
exact.data <- match.data(exact.match)
install.packages("Matching")
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
summary(exact.match)
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
summary(exact.match)
exact.data <- match.data(exact.match)
# Load data
ps2_data <- read.csv("ps2_data.csv")
# Clean data
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-eight'] <- '1988'
ps2_data$facility_opening_year[ps2_data$facility_opening_year == 'nineteen eighty-nine'] <- '1989'
ps2_data <- subset(ps2_data, industry!='AUTOMOTIVE')
ps2_data$facility_opening_year = droplevels(ps2_data$facility_opening_year)
ps2_data$industry = droplevels(ps2_data$industry)
# Run difference-in-means balance test
bal_1 <- lm(scream_plant ~ industry, data=ps2_data)
bal_2 <- lm(scream_plant ~ as.numeric(facility_opening_year), data=ps2_data)
bal_3 <- lm(scream_plant ~ production_value_2004, data=ps2_data)
stargazer(bal_1, bal_2, bal_3, type='text', omit.stat=c('f', 'ser'))
# Run regression-based approach
lm1 <- lm(tons_of_nox ~ scream_plant + industry + as.numeric(facility_opening_year) + production_value_2004,  data=ps2_data)
lm2 <- lm(tons_of_nox ~ scream_plant, data=ps2_data)
stargazer(lm1, lm2, type='text', omit.stat=c('f', 'ser'))
# Run exact matching approach
exact.match <- matchit(scream_plant ~ industry, data=ps2_data, method='exact')
summary(exact.match)
exact.data <- match.data(exact.match)
library(dplyr)
# Calcualte ATE
exact.data <- exact.data %>%
group_by(subclass, scream_plant) %>%
mutate(subclass_avg = mean(tons_of_nox))
exact.data <- exact.data %>%
group_by(subclass) %>%
mutate(subclass_count = count(tons_of_nox))
exact.data <- exact.data %>%
group_by(subclass) %>%
mutate(subclass_count = count())
exact.data <- exact.data %>%
mutate(subclass_count = count(subclass))
exact.data <- exact.data %>%
count = count(subclass)
exact.data %>%
group_by(subclass) %>%
summarise(count=n())
exact.data %>%
group_by(subclass) %>%
mutate(subclass_cnt = count = n())
exact.data %>%
group_by(subclass) %>%
mutate(subclass_cnt = n())
exact.data %>%
group_by(subclass) %>%
mutate(subclass_cnt = n())
# Calcualte ATE
exact.data <- exact.data %>%
group_by(subclass, scream_plant) %>%
mutate(subclass_avg = mean(tons_of_nox))
exact.data %>%
group_by(subclass) %>%
mutate(subclass_cnt = n())
exact.data %>%
group_by(subclass) %>%
mutate(count = n())
View(exact.data)
df %>% group_by(subclass) %>% tally()
exact.data %>% group_by(subclass) %>% tally()
exact.data <- exact.data %>%
group_by(subclass) %>%
mutate(subclass_cnt = n())
exact.data <- exact.data %>%
group_by(subclass, scream_plant) %>%
mutate(subclass_cnt = n())
900+5100+450+2550+118+850
nrow(exact.data)
nrow(exact.data[exact.data$scream_plant==1]
)
nrow(exact.data[exact.data$scream_plant==1])
length(exact.data[exact.data$scream_plant==1])
sum(exact.data[exact.data$scream_plant==1])
sum(exact.data$scream_plant == 1)
View(ps2_data)
library(glmnet)
library(tidyverse)
library(plyr)
library(reshape)
setwd("~/fall2019/elections_campaigns/medicaid-expansion")
## Read in Data
lobby_1 <- read_csv("lobbyist_spending_by_state.csv")
lobby_2 <- read_csv("lobby_spending_advocates.csv")
medicaid <- read_csv("medicaid-data.csv")
state_sc <- read_csv("state_to_statecode.csv") %>%
rename(c("Code" = "state"))
## Clean lobbying Data
lobbying_full <- join(lobby_1, lobby_2, by = NULL, type = "full") %>%
select(c("Filing_Year", "Filing_Jurisdiction",
"Spender_Industry", "Spender_Sector",
"Total_$", "#_of_Records")) %>%
rename(c("Filing_Year" = "year",
"Filing_Jurisdiction" = "state",
"Total_$" = "lobbying_spend",
"#_of_Records" = "num_contributions"))
lobbying_full <- join(lobbying_full, state_sc, by= "state", type = "left") %>%
select(-c("state", "Abbrev", "Spender_Sector")) %>%
rename(c("State" = "state"))
library(glmnet)
library(tidyverse)
library(plyr)
library(reshape)
## Read in Data
lobby_1 <- read_csv("lobbyist_spending_by_state.csv")
lobby_2 <- read_csv("lobby_spending_advocates.csv")
medicaid <- read_csv("medicaid-data.csv")
state_sc <- read_csv("state_to_statecode.csv") %>%
rename(c("Code" = "state"))
## Clean lobbying Data
lobbying_full <- join(lobby_1, lobby_2, by = NULL, type = "full") %>%
select(c("Filing_Year", "Filing_Jurisdiction",
"Spender_Industry", "Spender_Sector",
"Total_$", "#_of_Records")) %>%
rename(c("Filing_Year" = "year",
"Filing_Jurisdiction" = "state",
"Total_$" = "lobbying_spend",
"#_of_Records" = "num_contributions"))
lobbying_full <- join(lobbying_full, state_sc, by= "state", type = "left") %>%
select(-c("state", "Abbrev", "Spender_Sector")) %>%
rename(c("State" = "state"))
library(glmnet)
library(tidyverse)
library(plyr)
library(reshape)
## Read in Data
lobby_1 <- read_csv("lobbyist_spending_by_state.csv")
setwd("~/Dropbox/Fall, 2019/Science of Elections/medicaid-expansion")
## Read in Data
lobby_1 <- read_csv("lobbyist_spending_by_state.csv")
lobby_2 <- read_csv("lobby_spending_advocates.csv")
medicaid <- read_csv("medicaid-data.csv")
state_sc <- read_csv("state_to_statecode.csv") %>%
rename(c("Code" = "state"))
## Clean lobbying Data
lobbying_full <- join(lobby_1, lobby_2, by = NULL, type = "full") %>%
select(c("Filing_Year", "Filing_Jurisdiction",
"Spender_Industry", "Spender_Sector",
"Total_$", "#_of_Records")) %>%
rename(c("Filing_Year" = "year",
"Filing_Jurisdiction" = "state",
"Total_$" = "lobbying_spend",
"#_of_Records" = "num_contributions"))
lobbying_full <- join(lobbying_full, state_sc, by= "state", type = "left") %>%
select(-c("state", "Abbrev", "Spender_Sector")) %>%
rename(c("State" = "state"))
## business services are repeated (were broken up from which businesses contributed)
# group by and sum these contributions
lobbying_full %>%
group_by(Spender_Industry, year, state) %>%
summarise(lobbying_spend = sum(lobbying_spend),
num_contributions = sum(num_contributions))
View(lobbying_full)
by_cyl <- mtcars %>% group_by(cyl)
View(mtcars)
colnames(mtcars)
mtcars %>%
group_by(cyl) %>%
summarise(mpg_sum = sum(mpg))
View(mtcars)
mtcars %>%
group_by(as.factor(cyl)) %>%
summarise(mpg_sum = sum(mpg))
mtcars %>%
group_by(as.factor(cyl))
table(mtcars$cyl)
by_cyl <- mtcars %>% group_by(cyl)
by_cyl %>% summarise(
disp = mean(disp),
hp = mean(hp)
)
## business services are repeated (were broken up from which businesses contributed)
# group by and sum these contributions
lobbying_full %>%
dplyr::group_by(Spender_Industry, year, state) %>%
dplyr::summarise(lobbying_spend = sum(lobbying_spend),
num_contributions = sum(num_contributions))
library(glmnet)
install.packages("glmnet")
install.packages("glmnet v3.0-1")
install.packages("glmnet", repos = "http://cran.r-project.org")
install.packages("glmnet", repos = "http://cran.r-project.org")
install.packages("glmnet", dependencies=TRUE)
install.packages("glmnet")
install.packages("glmnet", repos = "http://cran.us.r-project.org")
install.packages("glmnet", repos = "http://cran.us.r-project.org")
version
